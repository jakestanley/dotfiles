#!/usr/bin/env bash

if [[ "${DOTFILES}" == "" ]]; then
    echo "DOTFILES is not set. Exiting to stay safe"
    exit 1
fi

if [[ "${ZSH_CUSTOM}" == "" ]]; then
    echo "ZSH_CUSTOM is not set. Exiting to stay safe"
    echo "You may need to export ZSH_CUSTOM before running this script"
    echo "Check oh-my-zsh is installed"
    exit 1
fi

# linking zsh custom
echo -e "\nLinking shell functions and aliases..."
rm -f "$ZSH_CUSTOM"/*.zsh
ln -s "$DOTFILES/zsh/custom/functions.zsh" "$ZSH_CUSTOM/functions.zsh"
ln -s "$DOTFILES/aliases.sh" "$ZSH_CUSTOM/aliases.zsh"

# git stuff
echo -e "\nLinking git configuration..."
rm -f ~/.gitconfig
rm -f ~/.gitignore_global

ln -s $DOTFILES/gitconfig ~/.gitconfig
ln -s $DOTFILES/gitignore_global ~/.gitignore_global

# tmux
echo -e "\nLinking tmux configuration..."
rm -f $HOME/.tmux.conf
ln -s $DOTFILES/tmux.conf $HOME/.tmux.conf

# vim
echo -e "\nLinking vim configuration..."
#rm -r ~/.vim
test -f ~/.vimrc && rm ~/.vimrc

#ln -s $DOTFILES/vim ~/.vim
ln -s $DOTFILES/vimrc ~/.vimrc

# Get OS identifier so we know where to install stuff
OS=$(uname -s)

echo -e "\nLinking Sublime Text configuration..."
if [ "$OS" == 'Darwin' ]; then
    SUBLIME_DIR="$HOME/Library/Application Support/Sublime Text 3"
elif [ "$OS" == 'Linux' ]; then
    SUBLIME_DIR="$HOME/.config/sublime-text-3"
else
    echo -e "\nEnvironment ${OS} is not supported"
    # TODO fix this for BSD. It shouldn't crap out. 
    #  Use a -z check on SUBLIME_DIR in the next step.
    #  Current fix is to place it last with zero exit code
    exit 0
fi

echo -e "\tSource: $DOTFILES"
echo -e "\tTarget: $SUBLIME_DIR"

mkdir -p "$SUBLIME_DIR/Packages"
rm -rf   "$SUBLIME_DIR/Packages/User"
ln -s    "$DOTFILES/config/sublime-text-3/Packages/User" \
         "$SUBLIME_DIR/Packages/User"

